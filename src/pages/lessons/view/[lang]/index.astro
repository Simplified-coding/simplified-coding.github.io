---
import Layout from "../../../../layouts/Layout.astro";
import CardHeader from "../../../../components/Bootstrap/CardHeader.astro";
import {getEntry} from "astro:content";
import Language from "../../../../components/Languages/Language.astro";
import LessonBar from "../../../../components/LessonBar.astro";

// @ts-expect-error
const entry = (await getEntry("lessons", Astro.params.lang || "js")).data;
const course = (await getEntry("lessons", "courses")).data.courses.filter(
  (c: any) => c.slug == Astro.params.lang
)[0];

const lessons = entry.data;
---

<!--
SPDX-FileCopyrightText: 2024 The Simplified Coding Team <main@simplifiedcoding.org>

SPDX-License-Identifier: GPL-3.0-only
-->
<Layout>
  <div
    class="d-flex justify-content-center p-4"
    style="color: white"
    data-bs-theme="dark"
  >
    <div>
      <div>
        <h1>
          Μαθήματα {course.language}
          <i class={`${course.icon}`}></i>
        </h1>
        <div>
          <div>
            <Language data={course} button_visible={false}>
              <div
                class="progress"
                role="progressbar"
                aria-label="Example with label"
                aria-valuenow="25"
                aria-valuemin="0"
                aria-valuemax="100"
              >
                <div
                  class="progress-bar progress-bar-striped progress-bar-animated"
                  style="width: 0"
                  id="progress-bar"
                >
                  0% - 0/0 Completed
                </div>
              </div>
            </Language>
          </div>
        </div>
      </div>
      <br/>
      <div>
        {
          lessons.map((lesson) => <LessonBar lesson={lesson} course={course}/>)
        }
      </div>
    </div>
  </div>

</Layout>

<script data-lesson-length={lessons.length}>
  let progressBar = document.getElementById("progress-bar");
  const lessonLength = parseInt(
    document.currentScript.getAttribute("data-lesson-length")
  );

  const currentCourse = location.pathname.split("/")[3];
  const percentage =
    (JSON.parse(localStorage.getItem(currentCourse)).length /
      lessonLength) *
    100;

  progressBar.style.width = percentage + "%";
  progressBar.innerText = `${Math.round(percentage)}% - ${
    JSON.parse(localStorage.getItem(currentCourse)).length
  }/${lessonLength} Completed`;

  JSON.parse(localStorage.getItem(currentCourse)).forEach((course) => {
    document.getElementById(`${course}-status`).innerHTML = document
      .getElementById(`${course}-status`)
      .innerHTML += "✅"
  });

</script>

<script>
  import {removeLesson} from "../../../../lib/lessonTracking";

  const elements = document.getElementsByClassName("undo-completed-lesson") as HTMLCollectionOf<HTMLButtonElement>
  for (let i = 0; i < elements.length; i++) {
    elements[i].addEventListener("click", () => {
      removeLesson(elements[i].dataset.course, elements[i].dataset.lesson)
      window.location.reload()
    })
  }
</script>